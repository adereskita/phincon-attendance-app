//
//  ChangePasswordInteractor.swift
//  phincon-attendance-app
//
//  Created by Sri Endah Ramurti on 27/04/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftKeychainWrapper

protocol ChangePasswordBusinessLogic
{
    func changePssword(_ request: ChangePasswordModel.Put.Request)
}

protocol ChangePasswordDataStore
{
  //var name: String { get set }
}

class ChangePasswordInteractor: ChangePasswordBusinessLogic, ChangePasswordDataStore
{
    
    
  var presenter: ChangePasswordPresentationLogic?
  var worker: ChangePasswordWorker?
    let keyChainWrapper = KeychainWrapper.standard
    var token : String = ""
  //var name: String = ""
  
  // MARK: Do something
  
func changePssword(_ request: ChangePasswordModel.Put.Request) {
    worker = ChangePasswordWorker()
      token = keyChainWrapper.string(forKey: "user_token")!
    worker?.changePassword(token: token, password: request.password!, newpassword: request.new_password!, confirmpassword: request.confirm_password!, completionHandler: { (result) in
          switch result {
          case .success(let value):
              var response: ChangePasswordModel.Put.Response?
              
              print(value.success)
              response = ChangePasswordModel.Put.Response(success: value.success)
              
              if let respons = response {
                  self.presenter?.interactor(didChange: respons)
                  print("Change Password Success")
              }
          case .failure(let error):
              self.presenter?.interactor(didFailedChange: error.message!)
              print("Failed Change Password")
          }
      })
    
    
  }
}
