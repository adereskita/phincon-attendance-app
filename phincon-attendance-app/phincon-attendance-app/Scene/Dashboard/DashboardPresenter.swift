//
//  DashboardPresenter.swift
//  phincon-attendance-app
//
//  Created by Ade on 3/24/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DashboardPresentationLogic {
    func interactor(CheckIn response: DashboardModels.CheckLocation.Response)
    func interactor(CheckOut response: DashboardModels.CheckLocation.Response)
    func interactor(CheckInList response: DashboardModels.GetLocation.Response)
    func interactor(CheckOutList response: DashboardModels.GetLocation.Response)
    func interactor(ButtonStatus response: HistoryModels.FetchHistory.Response)
    func interactor(didFailedCheck status: Int, message: String)
    func interactor(didExpiredSession status: Int, message: String)
}

class DashboardPresenter: DashboardPresentationLogic {
    
  weak var viewController: DashboardDisplayLogic?
  
  // MARK: Do something
    func interactor(ButtonStatus response: HistoryModels.FetchHistory.Response) {
        let viewModel = DashboardModels.ViewModel(activity: response.success.result?.first?.activity)
        viewController?.presenter(ButtonStatus: viewModel)
    }
    
    func interactor(CheckOut response: DashboardModels.CheckLocation.Response) {
        viewController?.presenter(didCheckOut: response)
    }
    
    func interactor(CheckIn response: DashboardModels.CheckLocation.Response) {
        viewController?.presenter(didCheckIn: response)
    }
  
    func interactor(CheckInList response: DashboardModels.GetLocation.Response) {
//        let viewModel = DashboardModels.LoadCheckInOut.ViewModel()
        viewController?.presenter(didLoadCheckInLoc: response)
    }
    
    func interactor(CheckOutList response: DashboardModels.GetLocation.Response) {
        viewController?.presenter(didLoadCheckOutLoc: response)
    }
    
    func interactor(didFailedCheck status: Int, message: String) {
        viewController?.presenter(didFailedCheck: status, message: message)
    }
    
    func interactor(didExpiredSession status: Int, message: String) {
        viewController?.presenter(expiredLoginSession: status, message: message)
    }
}
