//
//  HistoryInteractor.swift
//  phincon-attendance-app
//
//  Created by Ade on 3/22/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftKeychainWrapper

protocol HistoryBusinessLogic {
    func loadHistory(request: HistoryModels.FetchHistory.Request)
    func getSafariLink(_ selectedHistory: String)
}

protocol HistoryDataStore {
  var desc: String { get set }
}

class HistoryInteractor: HistoryBusinessLogic, HistoryDataStore {
    
    var presenter: HistoryPresentationLogic?
    var worker = HistoryWorker()
//    let userDefault = UserDefaults.standard
    let keyChainWrapper = KeychainWrapper.standard

    var desc: String = ""
    var token: String = ""
    
    var history = [History]()
  
  // MARK: Do something
    
    func getSafariLink(_ selectedHistory: String) {
        desc = selectedHistory
    }
    
    func loadHistory(request: HistoryModels.FetchHistory.Request) {
        token = keyChainWrapper.string(forKey: "user_token")!
        worker.getHistory(log: request.log!, token: token, completionHandler: { result in
            switch result {
            case .success(let value):
                self.presenter?.interactor(LoadHistory: value)
            case .failure(let error):
                print(error.status, error.message!)
            }
        })
    }
}
