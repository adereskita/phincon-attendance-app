//
//  LoginInteractor.swift
//  phincon-attendance-app
//
//  Created by Sri Endah Ramurti on 23/03/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic {
    func login(_ request: LoginModels.Post.Request)
}

protocol LoginDataStore {
//    var username: String { get set }
//    var password: String { get set }
}

class LoginInteractor: LoginDataStore {
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker?
    
    // MARK: - Init
}

extension LoginInteractor: LoginBusinessLogic {
    // MARK: Do something
    
    func login(_ request: LoginModels.Post.Request) {
        worker = LoginWorker()
        worker?.postLogin(username: request.username!, password: request.password!, completionHandler: { (result) in
            
            switch result {
            case .success(let value):
                var respons: LoginModels.Post.Response?

                //business logic here if any
                if value != nil {
                    print(value.success)
                    respons = LoginModels.Post.Response(success: value.success)
                }
                if let respon = respons {
                    self.presenter?.interactor(didSuccessLogin: respon)
                }
            case .failure(let error):
                self.presenter?.interactor(didFailLogin: error.message!)
            }
            
        })
      
//        let response = LoginModels.Post.Response()
//        self.presenter!.presentSomething(response: response)
    }
}
